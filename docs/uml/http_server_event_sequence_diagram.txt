@startuml

'Copyright (c) 2013-2015 Ken Barker

title http_server events 

actor application
http_server <- http_connection : connected

opt socket connected callback
application <- http_server : connected
end

loop
== normal request ==
http_server <- http_connection : request received
application <- http_server     : request received
application -> http_server     : response
http_server -> http_connection : response

== chunked request ==

http_server <- http_connection : request received

'loop receive chunks
alt default
loop
http_server <- http_connection : chunk received
application <- http_server     : chunk received
end
application <- http_server     : request received (last chunk)
application -> http_server     : response
http_server -> http_connection : response
else chunk received callback
application <- http_server     : request received (header)
loop
http_server <- http_connection : chunk received
application <- http_server     : chunk received
end
application -> http_server     : response (to last chunk)
http_server -> http_connection : response (to last chunk)
end

'end

== expect 100-continue header ==

http_server <- http_connection : request received
opt expect continue callback
application <- http_server     : expect continue
application -> http_server     : response (continue?)
end
http_server -> http_connection : response (continue?)

== invalid request ==

http_server <- http_connection : request received
opt invalid request callback
application <- http_server     : invalid request
application -> http_server     : response or close
end
http_server -> http_connection : response or close

end

http_server <- http_connection : disconnected
opt socket disconnected callback
application <- http_server     : disconnected
end

@enduml